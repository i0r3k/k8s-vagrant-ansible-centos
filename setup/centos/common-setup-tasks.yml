- name: Upgrade all packages
  yum:
    name: '*'
    state: latest

- name: Install reqiured packages
  yum:
    name:
      - git 
      - sed 
      - sshpass 
      - ntp 
      - wget 
      - net-tools 
      - bind-utils 
      - bash-completion
    state: present

- name: Turn off firewall
  service:
    name: firewalld
    state: stopped
    enabled: no

# - name: enable sshd password auth
#   command: "{{ item }}"
#   with_items:
#    - sed -re 's/^(PasswordAuthentication)([[:space:]]+)no/\1\2yes/' -i.`date -I` /etc/ssh/sshd_config
#    - systemctl restart sshd

- name: Enable & start ntpd
  service:
    name: ntpd
    state: started
    enabled: yes

- name: Change time zone
  command: "{{ item }}"
  with_items:
    - cp -fv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    - timedatectl set-timezone Asia/Shanghai

- name: Older versions of Docker were called docker or docker-engine. If these are installed, uninstall them, along with associated dependencies.
  yum:
    name: 
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate 
      - docker-engine
    state: absent

- name: Install reqiured packages for docker
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data 
      - lvm2
    state: present

- name: Add docker repo
  command: "{{ item }}"
  with_items:
    # - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
  
- name: Install docker and its dependecies
  yum: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce-18.09.8-3.el7.x86_64
    - docker-ce-cli-18.09.8-3.el7.x86_64 
    - containerd.io-1.2.6-3.3.el7.x86_64
  notify:
    - docker status

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
  - swap
  - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Enable & start docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Aliyun docker registry
  blockinfile:
    path: /etc/docker/daemon.json
    block: |
      {
        "registry-mirrors": ["https://yf758kjo.mirror.aliyuncs.com"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        }
      }
    create: yes
    marker: ""
    marker_begin: ""
    marker_end: ""

# - name: Docker log to json-file
#   command: sed -i 's/log-driver=journald/log-driver=json-file/g' /etc/sysconfig/docker

- name: Restart docker
  service:
    name: docker
    daemon_reload: yes
    state: restarted

- name: Disable SELinux
  selinux:
    state: disabled

# - name: Disable SELinux
#   command: setenforce 0

- name: Add Kubernetes repo
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
    create: yes

- name: Install Kubernetes binaries
  yum: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet-1.15.3-0 
      - kubeadm-1.15.3-0 
      - kubectl-1.15.3-0

- name: Enable & start kubelet
  service:
    name: kubelet
    state: started
    enabled: yes

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes

- name: Resolve issues with traffic being routed incorrectly due to iptables being bypassed
  blockinfile:
    path: /etc/sysctl.d/k8s.conf
    block: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    create: yes

- name: Reload sysctl
  command: sysctl --system

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Add mappings to /etc/hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  with_items:
  - { name: vg-k8s-master, ip: 172.16.77.10 }
  - { name: vg-k8s-node-1, ip: 172.16.77.11 }
  - { name: vg-k8s-node-2, ip: 172.16.77.12 }
  - { name: vg-k8s-node-3, ip: 172.16.77.13 }